{
  "version": 3,
  "sources": ["../../@mui/material/Paper/paperClasses.js", "../../@mui/material/Paper/Paper.js", "../../@mui/material/utils/useSlot.js"],
  "sourcesContent": ["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\r\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\r\nexport function getPaperUtilityClass(slot) {\r\n  return generateUtilityClass('MuiPaper', slot);\r\n}\r\nconst paperClasses = generateUtilityClasses('MuiPaper', ['root', 'rounded', 'outlined', 'elevation', 'elevation0', 'elevation1', 'elevation2', 'elevation3', 'elevation4', 'elevation5', 'elevation6', 'elevation7', 'elevation8', 'elevation9', 'elevation10', 'elevation11', 'elevation12', 'elevation13', 'elevation14', 'elevation15', 'elevation16', 'elevation17', 'elevation18', 'elevation19', 'elevation20', 'elevation21', 'elevation22', 'elevation23', 'elevation24']);\r\nexport default paperClasses;", "'use client';\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport integerPropType from '@mui/utils/integerPropType';\r\nimport chainPropTypes from '@mui/utils/chainPropTypes';\r\nimport composeClasses from '@mui/utils/composeClasses';\r\nimport { alpha } from '@mui/system/colorManipulator';\r\nimport { styled, useTheme } from \"../zero-styled/index.js\";\r\nimport memoTheme from \"../utils/memoTheme.js\";\r\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\r\nimport getOverlayAlpha from \"../styles/getOverlayAlpha.js\";\r\nimport { getPaperUtilityClass } from \"./paperClasses.js\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    square,\r\n    elevation,\r\n    variant,\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', variant, !square && 'rounded', variant === 'elevation' && `elevation${elevation}`]\r\n  };\r\n  return composeClasses(slots, getPaperUtilityClass, classes);\r\n};\r\nconst PaperRoot = styled('div', {\r\n  name: 'MuiPaper',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === 'elevation' && styles[`elevation${ownerState.elevation}`]];\r\n  }\r\n})(memoTheme(({\r\n  theme\r\n}) => ({\r\n  backgroundColor: (theme.vars || theme).palette.background.paper,\r\n  color: (theme.vars || theme).palette.text.primary,\r\n  transition: theme.transitions.create('box-shadow'),\r\n  variants: [{\r\n    props: ({\r\n      ownerState\r\n    }) => !ownerState.square,\r\n    style: {\r\n      borderRadius: theme.shape.borderRadius\r\n    }\r\n  }, {\r\n    props: {\r\n      variant: 'outlined'\r\n    },\r\n    style: {\r\n      border: `1px solid ${(theme.vars || theme).palette.divider}`\r\n    }\r\n  }, {\r\n    props: {\r\n      variant: 'elevation'\r\n    },\r\n    style: {\r\n      boxShadow: 'var(--Paper-shadow)',\r\n      backgroundImage: 'var(--Paper-overlay)'\r\n    }\r\n  }]\r\n})));\r\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(inProps, ref) {\r\n  const props = useDefaultProps({\r\n    props: inProps,\r\n    name: 'MuiPaper'\r\n  });\r\n  const theme = useTheme();\r\n  const {\r\n    className,\r\n    component = 'div',\r\n    elevation = 1,\r\n    square = false,\r\n    variant = 'elevation',\r\n    ...other\r\n  } = props;\r\n  const ownerState = {\r\n    ...props,\r\n    component,\r\n    elevation,\r\n    square,\r\n    variant\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (theme.shadows[elevation] === undefined) {\r\n      console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\r\n    }\r\n  }\r\n  return /*#__PURE__*/_jsx(PaperRoot, {\r\n    as: component,\r\n    ownerState: ownerState,\r\n    className: clsx(classes.root, className),\r\n    ref: ref,\r\n    ...other,\r\n    style: {\r\n      ...(variant === 'elevation' && {\r\n        '--Paper-shadow': (theme.vars || theme).shadows[elevation],\r\n        ...(theme.vars && {\r\n          '--Paper-overlay': theme.vars.overlays?.[elevation]\r\n        }),\r\n        ...(!theme.vars && theme.palette.mode === 'dark' && {\r\n          '--Paper-overlay': `linear-gradient(${alpha('#fff', getOverlayAlpha(elevation))}, ${alpha('#fff', getOverlayAlpha(elevation))})`\r\n        })\r\n      }),\r\n      ...other.style\r\n    }\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * Shadow depth, corresponds to `dp` in the spec.\r\n   * It accepts values between 0 and 24 inclusive.\r\n   * @default 1\r\n   */\r\n  elevation: chainPropTypes(integerPropType, props => {\r\n    const {\r\n      elevation,\r\n      variant\r\n    } = props;\r\n    if (elevation > 0 && variant === 'outlined') {\r\n      return new Error(`MUI: Combining \\`elevation={${elevation}}\\` with \\`variant=\"${variant}\"\\` has no effect. Either use \\`elevation={0}\\` or use a different \\`variant\\`.`);\r\n    }\r\n    return null;\r\n  }),\r\n  /**\r\n   * If `true`, rounded corners are disabled.\r\n   * @default false\r\n   */\r\n  square: PropTypes.bool,\r\n  /**\r\n   * @ignore\r\n   */\r\n  style: PropTypes.object,\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * The variant to use.\r\n   * @default 'elevation'\r\n   */\r\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\r\n} : void 0;\r\nexport default Paper;", "'use client';\r\n\r\nimport useForkRef from '@mui/utils/useForkRef';\r\nimport appendOwnerState from '@mui/utils/appendOwnerState';\r\nimport resolveComponentProps from '@mui/utils/resolveComponentProps';\r\nimport mergeSlotProps from '@mui/utils/mergeSlotProps';\r\n/**\r\n * An internal function to create a Material UI slot.\r\n *\r\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\r\n * while Base UI does not need to support leaf component customization.\r\n *\r\n * @param {string} name: name of the slot\r\n * @param {object} parameters\r\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\r\n *\r\n * Note: the returned slot's props\r\n * - will never contain `component` prop.\r\n * - might contain `as` prop.\r\n */\r\nexport default function useSlot(\r\n/**\r\n * The slot's name. All Material UI components should have `root` slot.\r\n *\r\n * If the name is `root`, the logic behaves differently from other slots,\r\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\r\n */\r\nname, parameters) {\r\n  const {\r\n    className,\r\n    elementType: initialElementType,\r\n    ownerState,\r\n    externalForwardedProps,\r\n    getSlotOwnerState,\r\n    internalForwardedProps,\r\n    ...useSlotPropsParams\r\n  } = parameters;\r\n  const {\r\n    component: rootComponent,\r\n    slots = {\r\n      [name]: undefined\r\n    },\r\n    slotProps = {\r\n      [name]: undefined\r\n    },\r\n    ...other\r\n  } = externalForwardedProps;\r\n  const elementType = slots[name] || initialElementType;\r\n\r\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\r\n  // `resolvedComponentsProps` is always a plain object.\r\n  const resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\r\n  const {\r\n    props: {\r\n      component: slotComponent,\r\n      ...mergedProps\r\n    },\r\n    internalRef\r\n  } = mergeSlotProps({\r\n    className,\r\n    ...useSlotPropsParams,\r\n    externalForwardedProps: name === 'root' ? other : undefined,\r\n    externalSlotProps: resolvedComponentsProps\r\n  });\r\n  const ref = useForkRef(internalRef, resolvedComponentsProps?.ref, parameters.ref);\r\n  const slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\r\n  const finalOwnerState = {\r\n    ...ownerState,\r\n    ...slotOwnerState\r\n  };\r\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\r\n  const props = appendOwnerState(elementType, {\r\n    ...(name === 'root' && !rootComponent && !slots[name] && internalForwardedProps),\r\n    ...(name !== 'root' && !slots[name] && internalForwardedProps),\r\n    ...mergedProps,\r\n    ...(LeafComponent && {\r\n      as: LeafComponent\r\n    }),\r\n    ref\r\n  }, finalOwnerState);\r\n  Object.keys(slotOwnerState).forEach(propName => {\r\n    delete props[propName];\r\n  });\r\n  return [elementType, props];\r\n}"],
  "mappings": "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",
  "names": ["Paper", "_jsx", "PropTypes"]
}
